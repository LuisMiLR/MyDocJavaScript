//transform arrays of objects

// Comme nous l'avons Ã©tudiÃ© prÃ©cÃ©demment, la .map()mÃ©thode array permet de transformer un tableau en un autre tableau de mÃªme taille .

// Voici un exemple de .map()ce que nous avons vu prÃ©cÃ©demment :

const names = ["sam", "Alex"];

const upperNames = names.map((name) => name.toUpperCase());
console.log(upperNames); // ["SAM", "ALEX"]

//Dans cet exemple, nous transformons un tableau de chaÃ®nes en un nouveau tableau de chaÃ®nes oÃ¹ les Ã©lÃ©ments sont en majuscules .

// Cela .map()fonctionne de la mÃªme maniÃ¨re pour les tableaux dâ€™objets. Vous pouvez transformer
// un tableau d'objets en un nouveau tableau d'objets, ou vous pouvez le transformer en un tableau de chaÃ®nes ou un tableau de nombres.
// Cela vous permet d' extraire certaines propriÃ©tÃ©s d'un tableau d'objets. Voici un exemple :

const tweets = [
  {
    id: 1080777336298049537,
    message: "Hello Twitter ðŸ‘‹",
    created_at: "2020-01-03 11:46:00",
  },
  {
    id: 1080777336298195435,
    message: "How do you keep track of your notes?",
    created_at: "2021-02-19 15:32:00",
  },
];

const messages = tweets.map((tweet) => tweet.message);
console.log(messages); // ["Hello Twitter ðŸ‘‹", "How do you keep track of your notes?"]
